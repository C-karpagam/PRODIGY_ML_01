import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Load dataset
url = "https://raw.githubusercontent.com/datasets/house-prices/master/data/house-prices.csv"  # Update to Kaggle dataset if necessary
data = pd.read_csv(url)

# Data inspection
print(data.info())
print(data.head())

# Selecting relevant features: Square footage, Bedrooms, Bathrooms
features = data[['GrLivArea', 'BedroomAbvGr', 'FullBath']]
target = data['SalePrice']

# Handle missing data (if any)
features = features.fillna(features.mean())
target = target.fillna(target.mean())

# Splitting dataset into train and test sets
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Model Evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"RÂ² Score: {r2}")

# Visualization: True vs Predicted
plt.scatter(y_test, y_pred, alpha=0.5)
plt.xlabel("True Prices")
plt.ylabel("Predicted Prices")
plt.title("True vs Predicted Prices")
plt.show()
